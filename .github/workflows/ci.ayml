name: CI

on: [push, pull_request]

jobs:
  unit:
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        activate-environment: conda-env
        channels: conda-forge, defaults
        python-version: ${{ matrix.python-version }}

    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        eval "$(conda shell.bash hook)"
        pip install flake8
        flake8

    - name: Run tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PLOOMBER_STATS_ENABLED: false
        PYTHON_VERSION: ${{ matrix.python-version }}
      shell: bash -l {0}
      run: |
        eval "$(conda shell.bash hook)"

        # if we remove the --editable flag pytest throws an error, because there
        # are two copies of the pkg (src/ and site-packages/), this is a quick
        # way to fix it
        # https://github.com/pytest-dev/pytest/issues/7678

        pip install --editable .
        python -c "import sklearn_evaluation"
        pip install --editable ".[all]"

        # run unit tests
        # docstrings
        # pytest doctest docs: https://docs.pytest.org/en/latest/doctest.html
        # doctest docs: https://docs.python.org/3/library/doctest.html
        # and examples (this is a hacky way to do it since --doctest-modules will
        # first load any .py files, which are the examples, and then try to run
        # any doctests, there isn't any)

        pytest tests/ src/ examples/ --cov=sklearn_evaluation --doctest-modules --durations-min=5

        coveralls

  # run: pkgmt check
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'pkgmt[check]'
      - name: Check project
        run: |
          pkgmt check

  release:
    runs-on: ubuntu-latest
    if: github.ref_name == 'master' && startsWith(github.event.head_commit.message, '[release]')
    needs: [unit, check]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'pkgmt[check]' twine wheel
      - name: Configure git
        run: |
          git config user.email "github-actions@ploomber.io"
          git config user.name "github-actions"
      - name: Bump up tag version 
        run: |
          pkgmt version --yes
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          TAG=$(git describe --abbrev=0)
          echo yes | pkgmt release $TAG --production
